<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.internous.sampleweb.model.mapper.TblCartMapper">
	<!-- tbl_cart,mst_productをJOINし、必要データを抽出するSQL -->
	<select id="findByUserId" resultType="jp.co.internous.sampleweb.model.domain.dto.CartDto">
		SELECT
			cart.id AS id,
			cart.product_count AS product_count,
			product.price AS price,
			product.product_name AS product_name,
			product.image_full_path AS image_full_path, 
			(cart.product_count * product.price) AS subtotal,
			cart.created_at AS created_at,
			cart.updated_at AS updated_at
		FROM 
			tbl_cart AS cart
		JOIN 
			mst_product AS product 
		ON 
			cart.product_id = product.id
		WHERE 
			user_id = #{userId}
		ORDER BY updated_at DESC, created_at DESC
	</select>
	
	<!-- 
	foreach元素の属性 
	item:セット内の要素反復時の別名であり、このパラメータは必須。
	index:listおよび配列において、indexは要素のシーケンス番号であり、mapにおいて、indexは要素のkeyであり、このパラメータはオプション。
	collectio:foreachを行う対象として、Listオブジェクトはデフォルトではキーとして「list」を使用しています。配列オブジェクトはキーとしての代わりに「array」があります。Mapオブジェクトにはデフォルトのキーがありません。もちろん、参加時には@Param("keyName")を使ってキーを設定することができます。keyNameを設定すると、list、arrayは無効になります。パラメータの対象となるフィールドがある場合を除きます。例えば、Userに属性List idsがあれば。入参はUser対象です。このコレクション＝「ids」です。もしUserが属性Ids idsを持っているならば。そのうち、Idsは対象で、Idsは属性List idを持っています。入参はUserオブジェクトで、collection=「ids.id」
	open:foreachコードの開始記号は、一般的に(close=「)」と併用されます。n()、values()によく使われます。このパラメータはオプション。
	separator：要素間のセパレータ、例えばin（）の場合、separator="は、要素の中間に自動的に使用されます。"仕切り、カンマの手動入力によるsqlエラーを避けるために、in（1，2）のように。このパラメータはオプション。
	close:foreachコードのクローズ記号は、一般的に、オープン=「(」と併用します。n()、values()によく使われます。このパラメータはオプション。
	削除IDとして「1」と「2」を渡した場合のSQLクエリは
	DELETE FROM tbl_cart WHERE id IN (1 ,2 )
	となる
	-->
	<delete id="deleteById">
		DELETE
		FROM tbl_cart
		WHERE id IN 
		<foreach item="checkedId" index="index" collection="checkedIds" open="(" separator="," close=")">
			#{checkedId}
		</foreach>
	</delete>
</mapper>